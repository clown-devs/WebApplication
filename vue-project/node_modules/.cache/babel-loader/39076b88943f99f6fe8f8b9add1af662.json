{"ast":null,"code":"import { handleError } from \"vue\";\nimport axios from \"./instance\";\nconst API_KEY = 'api/v2/';\nconst API_PATHS = {\n  auth: 'users/auth/token/login/',\n  user: 'users/employee/current/'\n};\nconst api = {\n  error: {},\n  contextForMuttations: {},\n\n  async auth(username, password) {\n    try {\n      const res = await axios.post(API_KEY + API_PATHS['auth'], {\n        username,\n        password\n      });\n      return res.data;\n    } catch (error) {\n      if (error.response) {\n        this.error = error.response.status === 400 ? \"Неверный логин/пароль\" : error.message;\n      } else if (error.request) {\n        this.error = \"Bad connection\";\n      } else {//\n      }\n\n      return null;\n    }\n  },\n\n  async currentUser(token) {\n    const res = await axios.get(API_KEY + API_PATHS['user'], {\n      headers: {\n        \"Authorization\": \"Token \" + token\n      }\n    });\n    return res.data;\n  }\n\n};\nexport default api;","map":{"version":3,"names":["handleError","axios","API_KEY","API_PATHS","auth","user","api","error","contextForMuttations","username","password","res","post","data","response","status","message","request","currentUser","token","get","headers"],"sources":["/Users/root1/Developments/SberMeetingsWeb/WebApplication/vue-project/src/api/index.js"],"sourcesContent":["import { handleError } from \"vue\";\nimport axios from \"./instance\";\n\nconst API_KEY = 'api/v2/';\n\nconst API_PATHS = {\n    auth: 'users/auth/token/login/',\n    user: 'users/employee/current/'\n}\n\nconst api = {\n    \n    error: {},\n    contextForMuttations: {},\n\n    async auth(username, password) {\n        \n        try {\n            const res = await axios.post(API_KEY + API_PATHS['auth'], {\n                username,\n                password\n            });\n\n            return res.data;\n\n        } catch (error) {\n            \n            if (error.response) {\n                this.error \n                    = error.response.status === 400 ? \"Неверный логин/пароль\" : error.message;\n                \n            } else if (error.request) {\n                \n                this.error = \"Bad connection\";\n\n            } else {\n\n                //\n\n            }\n        \n            return null;\n        }\n        \n    },\n\n    async currentUser(token) {\n        const res = await axios.get(API_KEY + API_PATHS['user'], {\n            headers: {\n                \"Authorization\": \"Token \" + token\n            }\n        });\n\n        return res.data;\n    }\n\n};\n\nexport default api;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,KAA5B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,SAAS,GAAG;EACdC,IAAI,EAAE,yBADQ;EAEdC,IAAI,EAAE;AAFQ,CAAlB;AAKA,MAAMC,GAAG,GAAG;EAERC,KAAK,EAAE,EAFC;EAGRC,oBAAoB,EAAE,EAHd;;EAKR,MAAMJ,IAAN,CAAWK,QAAX,EAAqBC,QAArB,EAA+B;IAE3B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWV,OAAO,GAAGC,SAAS,CAAC,MAAD,CAA9B,EAAwC;QACtDM,QADsD;QAEtDC;MAFsD,CAAxC,CAAlB;MAKA,OAAOC,GAAG,CAACE,IAAX;IAEH,CARD,CAQE,OAAON,KAAP,EAAc;MAEZ,IAAIA,KAAK,CAACO,QAAV,EAAoB;QAChB,KAAKP,KAAL,GACMA,KAAK,CAACO,QAAN,CAAeC,MAAf,KAA0B,GAA1B,GAAgC,uBAAhC,GAA0DR,KAAK,CAACS,OADtE;MAGH,CAJD,MAIO,IAAIT,KAAK,CAACU,OAAV,EAAmB;QAEtB,KAAKV,KAAL,GAAa,gBAAb;MAEH,CAJM,MAIA,CAEH;MAEH;;MAED,OAAO,IAAP;IACH;EAEJ,CAlCO;;EAoCR,MAAMW,WAAN,CAAkBC,KAAlB,EAAyB;IACrB,MAAMR,GAAG,GAAG,MAAMV,KAAK,CAACmB,GAAN,CAAUlB,OAAO,GAAGC,SAAS,CAAC,MAAD,CAA7B,EAAuC;MACrDkB,OAAO,EAAE;QACL,iBAAiB,WAAWF;MADvB;IAD4C,CAAvC,CAAlB;IAMA,OAAOR,GAAG,CAACE,IAAX;EACH;;AA5CO,CAAZ;AAgDA,eAAeP,GAAf"},"metadata":{},"sourceType":"module"}