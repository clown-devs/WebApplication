{"ast":null,"code":"import api from '@/api';\nexport default {\n  actions: {\n    async logIn(context, {\n      username,\n      password,\n      isSavedSession\n    }) {\n      const token = await api.auth(username, password);\n      context.commit(\"setToken\", token.auth_token);\n      await context.dispatch('getUser');\n\n      if (isSavedSession) {\n        context.commit(\"saveSessionToLocalStorage\");\n      }\n\n      context.commit(\"saveSessionToSessionStorage\");\n      return true;\n    },\n\n    async getUser(context) {\n      const res = await fetch(context.state.baseURL + \"users/employee/current/\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Token \" + context.state.token\n        }\n      });\n      const user = await res.json();\n      context.commit(\"updateUser\", user);\n    }\n\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n    },\n\n    saveSessionToLocalStorage(state) {\n      localStorage.setItem(\"token\", state.token);\n      localStorage.setItem(\"user\", JSON.stringify(state.user));\n    },\n\n    saveSessionToSessionStorage(state) {\n      sessionStorage.setItem(\"token\", state.token);\n      sessionStorage.setItem(\"user\", JSON.stringify(state.user));\n    },\n\n    updateUser(state, user) {\n      state.user = user;\n    },\n\n    loadDataFromLocalStorage(state) {\n      state.token = localStorage.getItem(\"token\");\n      state.user = JSON.parse(localStorage.getItem(\"user\"));\n    },\n\n    loadDataFromSessionStorage(state) {\n      state.token = sessionStorage.getItem(\"token\");\n      state.user = JSON.parse(sessionStorage.getItem(\"user\"));\n    },\n\n    logOut(state) {\n      state.token = \"\";\n      state.user = {};\n      localStorage.removeItem('token');\n      localStorage.removeItem(\"user\");\n    }\n\n  },\n  state: {\n    token: null,\n    user: {},\n    baseURL: \"http://sbermeeting.tk/api/v2/\"\n  },\n  getters: {}\n};","map":{"version":3,"names":["api","actions","logIn","context","username","password","isSavedSession","token","auth","commit","auth_token","dispatch","getUser","res","fetch","state","baseURL","method","headers","user","json","mutations","setToken","saveSessionToLocalStorage","localStorage","setItem","JSON","stringify","saveSessionToSessionStorage","sessionStorage","updateUser","loadDataFromLocalStorage","getItem","parse","loadDataFromSessionStorage","logOut","removeItem","getters"],"sources":["/Users/root1/Developments/SberMeetingsWeb/WebApplication/vue-project/src/store/modules/auth.js"],"sourcesContent":["import api from '@/api'\n\nexport default {\n    actions: {\n        async logIn(context, {username, password, isSavedSession}) {\n    \n              const token = await api.auth(username, password);\n              context.commit(\"setToken\", token.auth_token);\n              \n              await context.dispatch('getUser');\n\n              if (isSavedSession) {\n                context.commit(\"saveSessionToLocalStorage\");\n              }\n\n              context.commit(\"saveSessionToSessionStorage\");\n\n              return true;\n        },\n\n        async getUser(context) {\n            const res = await fetch(context.state.baseURL + \"users/employee/current/\", {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Token \" + context.state.token\n                }\n              });\n        \n              const user = await res.json();\n              context.commit(\"updateUser\", user);\n        }\n    },\n    \n    mutations: {\n        setToken(state, token) {\n            state.token = token;\n        },\n\n        saveSessionToLocalStorage(state) {\n            localStorage.setItem(\"token\", state.token);\n            localStorage.setItem(\"user\", JSON.stringify(state.user));\n        },\n\n        saveSessionToSessionStorage(state) {\n            sessionStorage.setItem(\"token\", state.token);\n            sessionStorage.setItem(\"user\", JSON.stringify(state.user));\n        },\n\n        updateUser(state, user) {\n            state.user = user;\n        },\n\n        loadDataFromLocalStorage(state) {\n            state.token = localStorage.getItem(\"token\");\n            state.user = JSON.parse(localStorage.getItem(\"user\"));\n        },\n\n        loadDataFromSessionStorage(state) {\n            state.token = sessionStorage.getItem(\"token\");\n            state.user = JSON.parse(sessionStorage.getItem(\"user\"));\n        },\n\n        logOut(state) {\n            state.token = \"\";\n            state.user = {};\n            localStorage.removeItem('token');\n            localStorage.removeItem(\"user\");\n        }\n    },\n    \n    state: {\n        token: null,\n        user: {},\n        baseURL: \"http://sbermeeting.tk/api/v2/\",\n    },\n    \n    getters: {}\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}