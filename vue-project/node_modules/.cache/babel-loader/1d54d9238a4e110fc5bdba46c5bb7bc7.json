{"ast":null,"code":"export default {\n  data() {\n    return {\n      username: \"Логин\",\n      password: \"password\",\n      auth_token: \"\",\n      baseURL: \"http://sbermeeting.tk/api/v2\"\n    };\n  },\n\n  methods: {\n    async logIn() {\n      const res = await fetch(this.baseURL + \"users/auth/token/login/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: this.username,\n          password: this.password\n        })\n      });\n      const token = await res.json();\n      this.auth_token = token.auth_token;\n    },\n\n    async getUser() {\n      const res = await fetch(this.baseURL + \"users/employee/current/\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Token \" + this.auth_token\n        }\n      });\n      const user = await res.json();\n      console.log(user);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqBA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,OADL;MAELC,QAAQ,EAAE,UAFL;MAGLC,UAAU,EAAE,EAHP;MAILC,OAAO,EAAE;IAJJ,CAAP;EAMD,CARY;;EAUbC,OAAO,EAAE;IACN,MAAMC,KAAN,GAAc;MACb,MAAMC,GAAE,GAAI,MAAMC,KAAK,CACrB,KAAKJ,OAAL,GAAe,yBADM,EAErB;QACEK,MAAM,EAAE,MADV;QAEEC,OAAO,EAAE;UACP,gBAAgB;QADT,CAFX;QAKEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBZ,QAAQ,EAAE,KAAKA,QADI;UAEnBC,QAAQ,EAAE,KAAKA;QAFI,CAAf;MALR,CAFqB,CAAvB;MAcA,MAAMY,KAAI,GAAI,MAAMP,GAAG,CAACQ,IAAJ,EAApB;MACA,KAAKZ,UAAL,GAAkBW,KAAK,CAACX,UAAxB;IACD,CAlBM;;IAoBP,MAAMa,OAAN,GAAgB;MACd,MAAMT,GAAE,GAAI,MAAMC,KAAK,CAAC,KAAKJ,OAAL,GAAe,yBAAhB,EAA2C;QAChEK,MAAM,EAAE,KADwD;QAEhEC,OAAO,EAAE;UACL,gBAAgB,kBADX;UAEL,iBAAiB,WAAW,KAAKP;QAF5B;MAFuD,CAA3C,CAAvB;MAQA,MAAMc,IAAG,GAAI,MAAMV,GAAG,CAACQ,IAAJ,EAAnB;MACAG,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACF;;EA/BO;AAVI,CAAf","names":["data","username","password","auth_token","baseURL","methods","logIn","res","fetch","method","headers","body","JSON","stringify","token","json","getUser","user","console","log"],"sourceRoot":"","sources":["/Users/root1/Developments/SberMeetingsWeb/WebApplication/vue-project/src/pages/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"form\">\n      <h1 class=\"title\">Вход в систему</h1>\n      <input type=\"text\" id=\"login\" name=\"user_login\" v-model=\"username\" />\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"user_password\"\n        v-model=\"password\"\n      />\n      <div class=\"save-container\">\n        <input type=\"checkbox\" id=\"save\" name=\"selected_save\" />\n        <label for=\"save\" class=\"save-label\">Запомнить</label>\n      </div>\n      <button type=\"submit\" @click=\"logIn\">Далее</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      username: \"Логин\",\n      password: \"password\",\n      auth_token: \"\",\n      baseURL: \"http://sbermeeting.tk/api/v2\"\n    };\n  },\n\n  methods: {\n     async logIn() {\n      const res = await fetch(\n        this.baseURL + \"users/auth/token/login/\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password,\n          }),\n        }\n      );\n\n      const token = await res.json();\n      this.auth_token = token.auth_token;\n    },\n\n    async getUser() {\n      const res = await fetch(this.baseURL + \"users/employee/current/\", {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Token \" + this.auth_token\n        }\n      });\n\n      const user = await res.json();\n      console.log(user);\n    }\n\n  },\n};\n</script>\n\n<style scoped>\n.login-container {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.form {\n  background: rgba(255, 255, 255, 0.58);\n  border: 1px solid #47af52;\n  border-radius: 30px;\n  width: 596px;\n  height: 660px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\nh1 {\n  color: #00b268;\n  font-size: 2rem;\n  text-align: center;\n  font-weight: normal;\n  margin-top: 16.36%;\n  margin-bottom: 13.03%;\n  width: 80.8%;\n}\n\ninput {\n  width: 80.8%;\n  background: rgba(255, 255, 255, 0);\n  border-bottom-color: #00b268;\n  border-top-style: none;\n  border-left-style: none;\n  border-right-style: none;\n}\n\ninput,\nlabel {\n  font-size: 1.25rem;\n  color: #00000085;\n}\n\ninput[type=\"text\"] {\n  margin-bottom: 18.18%;\n}\n\ninput[type=\"password\"] {\n  margin-bottom: 5.45%;\n}\n\n.save-container {\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n  margin-left: 9.56%;\n  margin-bottom: 8.48%;\n}\n\ninput[type=\"checkbox\"] {\n  min-width: 20px;\n  min-height: 20px;\n  margin-right: 10px;\n}\n\nbutton {\n  background: #47af52;\n  color: #ffffff;\n  font-size: 1.5rem;\n  border-radius: 30px;\n  border-width: 0;\n  width: 237px;\n  height: 60px;\n}\n\n@media (max-width: 1200px) {\n  .form {\n    width: 60vw;\n    height: 70vh;\n    justify-content: center;\n    gap: 2.5rem;\n  }\n\n  h1,\n  input[type=\"text\"],\n  input[type=\"password\"],\n  label,\n  input[type=\"checkbox\"],\n  button,\n  .save-container {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  button {\n    width: 50%;\n  }\n}\n\n@media (max-width: 992px) {\n  .form {\n    gap: 2rem;\n    height: 100vh;\n    width: 100vw;\n    border: inherit;\n    border-radius: 0;\n  }\n}\n\n@media (max-width: 767px) {\n  .form {\n    height: 100vh;\n    width: 100vw;\n    border-radius: 0;\n    border: inherit;\n  }\n\n  button {\n    width: 80%;\n    height: 2.5rem;\n  }\n}\n\n@media (max-height: 415px) {\n  .form {\n    height: 100vh;\n    gap: 1.3rem;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}