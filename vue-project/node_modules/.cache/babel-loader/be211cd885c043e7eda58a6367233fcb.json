{"ast":null,"code":"import { mapActions } from \"vuex\";\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      isSavedSession: false\n    };\n  },\n\n  methods: { ...mapActions([\"logIn\"]),\n\n    async touchLogIn() {\n      if (!this.isValidForm()) {\n        return;\n      }\n\n      const isAuth = await this.logIn({\n        username: this.username,\n        password: this.password,\n        isSavedSession: this.isSavedSession\n      });\n\n      if (isAuth) {\n        this.$router.push(\"/\");\n        return;\n      }\n\n      this.$router.push(\"/login\");\n    },\n\n    isHaveErrorAuth() {\n      return this.$store.state.auth.errorMessage !== \"\";\n    },\n\n    isValidForm() {\n      const MAX_PASSWORD_LEN = 4;\n      this.validationErrors = [];\n\n      if (this.username.length && this.password.length >= MAX_PASSWORD_LEN) {\n        return true;\n      }\n\n      if (!this.username) {\n        this.validationErrors.push(\"Введите логин!\");\n      }\n\n      if (this.password < MAX_PASSWORD_LEN) {\n        this.password.placeholder = 'Длина пароля должна быть больше ${MAX_PASSWORD_LEN}';\n      }\n\n      return false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwCA,SAASA,UAAT,QAA2B,MAA3B;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,QAAQ,EAAE,EAFL;MAGLC,cAAc,EAAE;IAHX,CAAP;EAKD,CAPY;;EASbC,OAAO,EAAE,EACP,GAAGL,UAAU,CAAC,CAAC,OAAD,CAAD,CADN;;IAGP,MAAMM,UAAN,GAAmB;MAEjB,IAAI,CAAC,KAAKC,WAAL,EAAL,EAAyB;QACvB;MACF;;MAEA,MAAMC,MAAK,GAAI,MAAM,KAAKC,KAAL,CAAW;QAC9BP,QAAQ,EAAE,KAAKA,QADe;QAE9BC,QAAQ,EAAE,KAAKA,QAFe;QAG9BC,cAAc,EAAE,KAAKA;MAHS,CAAX,CAArB;;MAMA,IAAII,MAAJ,EAAY;QACV,KAAKE,OAAL,CAAaC,IAAb,CAAkB,GAAlB;QACA;MACF;;MAEA,KAAKD,OAAL,CAAaC,IAAb,CAAkB,QAAlB;IACD,CArBM;;IAuBPC,eAAe,GAAG;MAChB,OAAO,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBC,YAAvB,KAAwC,EAA/C;IACD,CAzBM;;IA2BPT,WAAW,GAAG;MACZ,MAAMU,gBAAe,GAAI,CAAzB;MAEA,KAAKC,gBAAL,GAAwB,EAAxB;;MAEA,IAAI,KAAKhB,QAAL,CAAciB,MAAd,IAAwB,KAAKhB,QAAL,CAAcgB,MAAd,IAAwBF,gBAApD,EAAsE;QACpE,OAAO,IAAP;MACF;;MAEA,IAAI,CAAC,KAAKf,QAAV,EAAoB;QAClB,KAAKgB,gBAAL,CAAsBP,IAAtB,CAA2B,gBAA3B;MACF;;MAEA,IAAI,KAAKR,QAAL,GAAgBc,gBAApB,EAAsC;QACpC,KAAKd,QAAL,CAAciB,WAAd,GACE,qDADF;MAEF;;MAEA,OAAO,KAAP;IACF;;EA9CO;AATI,CAAf","names":["mapActions","data","username","password","isSavedSession","methods","touchLogIn","isValidForm","isAuth","logIn","$router","push","isHaveErrorAuth","$store","state","auth","errorMessage","MAX_PASSWORD_LEN","validationErrors","length","placeholder"],"sourceRoot":"","sources":["/Users/root1/Developments/SberMeetingsWeb/WebApplication/vue-project/src/pages/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <form @submit.prevent>\n      <h1 class=\"title\">Вход в систему</h1>\n      <input\n        type=\"text\"\n        id=\"login\"\n        name=\"user_login\"\n        v-model=\"username\"\n        placeholder=\"Введите логин...\"\n        required\n      />\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"user_password\"\n        v-model=\"password\"\n        placeholder=\"Введите пароль...\"\n        minlength=\"4\"\n        required\n      />\n      <div class=\"save-container\">\n        <input\n          type=\"checkbox\"\n          id=\"save\"\n          name=\"selected_save\"\n          v-model=\"isSavedSession\"\n        />\n        <label for=\"save\" class=\"save-label\">Запомнить</label>\n      </div>\n      <button type=\"submit\" @click=\"touchLogIn\">Далее</button>      \n      \n      <div v-if=\"isHaveErrorAuth()\" class=\"error-container\">\n        {{ this.$store.state.auth.errorMessage }}\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      isSavedSession: false\n    };\n  },\n\n  methods: {\n    ...mapActions([\"logIn\"]),\n\n    async touchLogIn() {\n      \n      if (!this.isValidForm()) {\n        return;\n      }\n\n      const isAuth = await this.logIn({\n        username: this.username,\n        password: this.password,\n        isSavedSession: this.isSavedSession,\n      });\n\n      if (isAuth) {\n        this.$router.push(\"/\");\n        return;\n      }\n\n      this.$router.push(\"/login\");\n    },\n\n    isHaveErrorAuth() {\n      return this.$store.state.auth.errorMessage !== \"\";\n    },\n\n    isValidForm() {\n      const MAX_PASSWORD_LEN = 4;\n\n      this.validationErrors = [];\n\n      if (this.username.length && this.password.length >= MAX_PASSWORD_LEN) {\n        return true; \n      }\n\n      if (!this.username) {\n        this.validationErrors.push(\"Введите логин!\");\n      }\n\n      if (this.password < MAX_PASSWORD_LEN) {\n        this.password.placeholder = \n          'Длина пароля должна быть больше ${MAX_PASSWORD_LEN}';\n      }\n\n      return false;\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Main */\n\n.login-container {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nform {\n  background: rgba(255, 255, 255, 0.58);\n  border: 1px solid #47af52;\n  border-radius: 30px;\n  width: 596px;\n  height: 660px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\nh1 {\n  color: #00b268;\n  font-size: 2rem;\n  text-align: center;\n  font-weight: normal;\n  margin-top: 16.36%;\n  margin-bottom: 13.03%;\n  width: 80.8%;\n}\n\ninput {\n  width: 80.8%;\n  background: rgba(255, 255, 255, 0);\n  border-bottom-color: #00b268;\n  border-top-style: none;\n  border-left-style: none;\n  border-right-style: none;\n}\n\ninput,\nlabel {\n  font-size: 1.25rem;\n  color: #00000085;\n}\n\ninput[type=\"text\"] {\n  margin-bottom: 18.18%;\n}\n\ninput[type=\"password\"] {\n  margin-bottom: 5.45%;\n}\n\n.save-container {\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n  margin-left: 9.56%;\n  margin-bottom: 8.48%;\n}\n\ninput[type=\"checkbox\"] {\n  min-width: 20px;\n  min-height: 20px;\n  margin-right: 10px;\n}\n\nbutton {\n  background: #47af52;\n  color: #ffffff;\n  font-size: 1.5rem;\n  border-radius: 30px;\n  border-width: 0;\n  width: 237px;\n  height: 60px;\n}\n\n.error-container {\n  border: 2px solid pink;\n  margin-top: 2.5rem;\n}\n\n/* Responcive CSS */\n\n@media (max-width: 1200px) {\n  form {\n    width: 60vw;\n    height: 70vh;\n    justify-content: center;\n    gap: 2.5rem;\n  }\n\n  h1,\n  input[type=\"text\"],\n  input[type=\"password\"],\n  label,\n  input[type=\"checkbox\"],\n  button,\n  .save-container,\n  .error-container {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  button {\n    width: 50%;\n  }\n}\n\n@media (max-width: 992px) {\n  form {\n    gap: 2rem;\n    height: 100vh;\n    width: 100vw;\n    border: inherit;\n    border-radius: 0;\n  }\n}\n\n@media (max-width: 767px) {\n  form {\n    height: 100vh;\n    width: 100vw;\n    border-radius: 0;\n    border: inherit;\n  }\n\n  button {\n    width: 80%;\n    height: 2.5rem;\n  }\n}\n\n@media (max-height: 415px) {\n  form {\n    height: 100vh;\n    gap: 1.3rem;\n  }\n}\n\n/* Validation styles */\n\ninput[type=\"text\"]:invalid {\n  border-bottom-color: red;\n}\n\ninput[type=\"password\"]:invalid {\n  border-bottom-color: red;\n}\n</style>"]},"metadata":{},"sourceType":"module"}