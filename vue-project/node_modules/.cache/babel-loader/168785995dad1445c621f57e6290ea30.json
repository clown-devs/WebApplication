{"ast":null,"code":"import axios from \"./instance\";\nconst API_KEY = 'api/v2/';\nconst API_PATHS = {\n  auth: 'users/auth/token/login/',\n  user: 'users/employee/current/'\n};\nconst api = {\n  error: {},\n\n  async auth(username, password) {\n    try {\n      const res = await axios.post(API_KEY + API_PATHS['auth'], {\n        username,\n        password\n      });\n      return res.data;\n    } catch (error) {\n      if (error.response) {\n        this.error = error.response.status === 400 ? \"Неверный логин/пароль\" : error.message;\n        return null;\n      } else if (error.request) {// this.error = \n      } else {}\n\n      console.log(error);\n      return null;\n    }\n  },\n\n  async currentUser(token) {\n    const res = await axios.get(API_KEY + API_PATHS['user'], {\n      headers: {\n        \"Authorization\": \"Token \" + token\n      }\n    });\n    return res.data;\n  }\n\n};\nexport default api;","map":{"version":3,"names":["axios","API_KEY","API_PATHS","auth","user","api","error","username","password","res","post","data","response","status","message","request","console","log","currentUser","token","get","headers"],"sources":["/Users/root1/Developments/SberMeetingsWeb/WebApplication/vue-project/src/api/index.js"],"sourcesContent":["import axios from \"./instance\";\n\nconst API_KEY = 'api/v2/';\n\nconst API_PATHS = {\n    auth: 'users/auth/token/login/',\n    user: 'users/employee/current/'\n}\n\nconst api = {\n    \n    error: {},\n\n    async auth(username, password) {\n        \n        try {\n            const res = await axios.post(API_KEY + API_PATHS['auth'], {\n                username,\n                password\n            });\n\n            return res.data;\n\n        } catch (error) {\n            \n            if (error.response) {\n                this.error \n                    = error.response.status === 400 ? \"Неверный логин/пароль\" : error.message;\n                \n                return null;\n\n            } else if (error.request) {\n                // this.error = \n            } else {\n\n            }\n            \n            console.log(error);\n            \n            return null;\n        }\n        \n    },\n\n    async currentUser(token) {\n        const res = await axios.get(API_KEY + API_PATHS['user'], {\n            headers: {\n                \"Authorization\": \"Token \" + token\n            }\n        });\n\n        return res.data;\n    }\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,SAAS,GAAG;EACdC,IAAI,EAAE,yBADQ;EAEdC,IAAI,EAAE;AAFQ,CAAlB;AAKA,MAAMC,GAAG,GAAG;EAERC,KAAK,EAAE,EAFC;;EAIR,MAAMH,IAAN,CAAWI,QAAX,EAAqBC,QAArB,EAA+B;IAE3B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAWT,OAAO,GAAGC,SAAS,CAAC,MAAD,CAA9B,EAAwC;QACtDK,QADsD;QAEtDC;MAFsD,CAAxC,CAAlB;MAKA,OAAOC,GAAG,CAACE,IAAX;IAEH,CARD,CAQE,OAAOL,KAAP,EAAc;MAEZ,IAAIA,KAAK,CAACM,QAAV,EAAoB;QAChB,KAAKN,KAAL,GACMA,KAAK,CAACM,QAAN,CAAeC,MAAf,KAA0B,GAA1B,GAAgC,uBAAhC,GAA0DP,KAAK,CAACQ,OADtE;QAGA,OAAO,IAAP;MAEH,CAND,MAMO,IAAIR,KAAK,CAACS,OAAV,EAAmB,CACtB;MACH,CAFM,MAEA,CAEN;;MAEDC,OAAO,CAACC,GAAR,CAAYX,KAAZ;MAEA,OAAO,IAAP;IACH;EAEJ,CAjCO;;EAmCR,MAAMY,WAAN,CAAkBC,KAAlB,EAAyB;IACrB,MAAMV,GAAG,GAAG,MAAMT,KAAK,CAACoB,GAAN,CAAUnB,OAAO,GAAGC,SAAS,CAAC,MAAD,CAA7B,EAAuC;MACrDmB,OAAO,EAAE;QACL,iBAAiB,WAAWF;MADvB;IAD4C,CAAvC,CAAlB;IAMA,OAAOV,GAAG,CAACE,IAAX;EACH;;AA3CO,CAAZ;AA8CA,eAAeN,GAAf"},"metadata":{},"sourceType":"module"}